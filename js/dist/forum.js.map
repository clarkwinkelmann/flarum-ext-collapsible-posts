{"version":3,"sources":["webpack://@clarkwinkelmann/collapsible-posts/webpack/bootstrap","webpack://@clarkwinkelmann/collapsible-posts/external \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/collapsible-posts/external \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/collapsible-posts/external \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/collapsible-posts/external \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@clarkwinkelmann/collapsible-posts/external \"flarum.core.compat['forum/utils/PostControls']\"","webpack://@clarkwinkelmann/collapsible-posts/external \"flarum.core.compat['common/components/Modal']\"","webpack://@clarkwinkelmann/collapsible-posts/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/collapsible-posts/./src/forum/utils/ExpandedStore.ts","webpack://@clarkwinkelmann/collapsible-posts/./src/forum/utils/retrieveTranslation.ts","webpack://@clarkwinkelmann/collapsible-posts/./src/forum/components/CollapseModal.ts","webpack://@clarkwinkelmann/collapsible-posts/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/collapsible-posts/./src/forum/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","revealedPosts","post","indexOf","id","push","app","data","locale","en","JSON","stringify","CollapseModal","subClass","superClass","constructor","title","translator","trans","className","content","currentReason","this","attrs","attribute","Button","component","onclick","saveCollapse","forum","map","reason","retrieveTranslation","label","loading","ExpandedStore","save","collapsedReason","then","hide","error","redraw","Modal","initializers","add","extend","PostControls","items","icon","modal","show","CommentPost","subtree","check","override","original","collapsedCount","reasonDefinition","find","explanation","replace","count","discussion","store","filter","page","after","number","expandedPosts","slice","reverse","forEach","expandedPost","index","postStore","relationships","posts","existingIds","link","newPosts","type","splice","stream","current","goToNumber"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/components/CommentPost'];","module.exports = flarum.core.compat['forum/utils/PostControls'];","module.exports = flarum.core.compat['common/components/Modal'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import Post from 'flarum/common/models/Post';\n\nconst revealedPosts: string[] = [];\n\nexport default {\n    alwaysReveal(post: Post) {\n        if (revealedPosts.indexOf(post.id()) === -1) {\n            revealedPosts.push(post.id());\n        }\n    },\n    isRevealed(post: Post): boolean {\n        return revealedPosts.indexOf(post.id()) !== -1;\n    },\n}\n","import app from 'flarum/forum/app';\n\nexport default function (object: {\n    [locale: string]: string\n} | undefined) {\n    if (object) {\n        if (object[app.data.locale]) {\n            return object[app.data.locale];\n        }\n\n        if (object.en) {\n            return object.en;\n        }\n    }\n\n    return JSON.stringify(object);\n}\n","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport ExpandedStore from '../utils/ExpandedStore';\nimport retrieveTranslation from '../utils/retrieveTranslation';\n\nexport default class CollapseModal extends Modal {\n    title() {\n        return app.translator.trans('clarkwinkelmann-collapsible-posts.forum.modal.title');\n    }\n\n    className(): string {\n        return 'Modal--small';\n    }\n\n    content() {\n        const currentReason = this.attrs.post.attribute('collapsedReason');\n\n        return m('.Modal-body', [\n            Button.component({\n                className: 'Button Button--block' + (currentReason ? '' : ' active'),\n                onclick: () => {\n                    this.saveCollapse(null);\n                },\n            }, app.translator.trans('clarkwinkelmann-collapsible-posts.forum.modal.uncollapse')),\n            (app.forum.attribute('collapsiblePostReasons') || []).map((reason: any) => Button.component({\n                className: 'Button Button--block' + (currentReason === reason.key ? ' active' : ''),\n                onclick: () => {\n                    this.saveCollapse(reason.key);\n                },\n            }, retrieveTranslation(reason.label))),\n        ]);\n    }\n\n    saveCollapse(reason: string | null) {\n        this.loading = true;\n\n\n        // Add the soon to be collapsed post to the list so the stream doesn't collapse right after click\n        // (and would show multiple buttons one below another)\n        ExpandedStore.alwaysReveal(this.attrs.post);\n\n        this.attrs.post.save({\n            collapsedReason: reason,\n        }).then(() => {\n            this.hide();\n        }).catch(error => {\n            this.loading = false;\n            m.redraw();\n\n            throw error;\n        });\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import {extend, override} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Post from 'flarum/common/models/Post';\nimport PostControls from 'flarum/forum/utils/PostControls';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport CollapseModal from './components/CollapseModal';\nimport ExpandedStore from './utils/ExpandedStore';\nimport retrieveTranslation from './utils/retrieveTranslation';\n\napp.initializers.add('clarkwinkelmann-collapsible-posts', () => {\n    extend(PostControls, 'moderationControls', function (items: ItemList, post: Post) {\n        if (!post.attribute('canCollapse')) {\n            return;\n        }\n\n        items.add('collapse', Button.component({\n            icon: 'fas fa-arrows-alt-v',\n            onclick() {\n                app.modal.show(CollapseModal, {\n                    post,\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-collapsible-posts.forum.postControl.' + (post.attribute('collapsedReason') ? 'uncollapse' : 'collapse'))));\n    });\n\n    extend(CommentPost.prototype, 'headerItems', function (this: CommentPost, items: ItemList) {\n        // @ts-ignore missing type-hint in Flarum\n        const {post} = this.attrs;\n\n        if (post.attribute('collapsedReason')) {\n            items.add('collapsed', m('span.CollapsedPostBadge', app.translator.trans('clarkwinkelmann-collapsible-posts.forum.badge.post')));\n        }\n    });\n\n    extend(CommentPost.prototype, 'oninit', function (this: CommentPost) {\n        // @ts-ignore missing type-hint in Flarum\n        const {post} = this.attrs;\n\n        this.subtree!.check(\n            () => post.attribute('collapsedReason'),\n            () => ExpandedStore.isRevealed(post)\n        );\n    });\n\n    override(CommentPost.prototype, 'view', function (this: CommentPost, original: any) {\n        // @ts-ignore missing type-hint in Flarum\n        const {post} = this.attrs;\n\n        // We want to include the current hidden post in the collapse count\n        const collapsedCount = post.attribute('collapsedCount') + 1;\n        const reasonDefinition = (app.forum.attribute('collapsiblePostReasons') || []).find(reason => reason.key === post.attribute('collapsedReason'));\n\n        if (post.attribute('collapsedReason') && !ExpandedStore.isRevealed(post)) {\n            return m('.CollapsedPost', [\n                m('.CollapsedPostText', reasonDefinition.explanation ? retrieveTranslation(reasonDefinition.explanation).replace('{count}', collapsedCount) : app.translator.trans('clarkwinkelmann-collapsible-posts.forum.stream.hidden', {\n                    count: collapsedCount,\n                    reason: reasonDefinition ? retrieveTranslation(reasonDefinition.label) : post.attribute('collapsedReason'),\n                })),\n                Button.component({\n                    className: 'Button',\n                    onclick() {\n                        ExpandedStore.alwaysReveal(post);\n\n                        const discussion = post.discussion();\n\n                        app.store\n                            .find('collapsed-posts', {\n                                filter: {discussion: discussion.id()},\n                                page: {after: post.number()},\n                            })\n                            .then((expandedPosts: Post[]) => {\n                                expandedPosts.slice().reverse().forEach((expandedPost, index) => {\n                                    // If the last post doesn't have a collapseCount value of zero, it means there will be more posts to expand\n                                    // so we don't expand it automatically\n                                    if (index === 0 && expandedPost.attribute('collapsedCount') > 0) {\n                                        return;\n                                    }\n\n                                    ExpandedStore.alwaysReveal(expandedPost);\n                                });\n\n                                const postStore = discussion.data.relationships.posts.data as { type: string, id: string }[];\n\n                                const existingIds = postStore.map(link => link.id);\n                                const index = existingIds.indexOf(post.id());\n\n                                if (index !== -1) {\n                                    const newPosts = expandedPosts.filter(expandedPost => existingIds.indexOf(expandedPost.id()) === -1).map(expandedPost => {\n                                        return {\n                                            type: 'posts',\n                                            id: expandedPost.id(),\n                                        };\n                                    });\n\n                                    // Add all posts from the response after the post on which we clicked expand\n                                    // we'll skip any post that is already in the list, which likely includes the first one\n                                    postStore.splice(index + 1, 0, ...newPosts);\n\n                                    const stream = app.current.get('stream');\n\n                                    if (stream) {\n                                        // Going to post forces a stream update and also nicely aligns the expanded post with the viewport\n                                        stream.goToNumber(post.number());\n                                    }\n                                }\n                            });\n                    },\n                }, app.translator.trans('clarkwinkelmann-collapsible-posts.forum.stream.load')),\n                // Some extensions like flarum/mentions expect .Post-body to always exist in a CommentPost\n                // So we'll add it here but hide it with CSS\n                m('.Post-body'),\n            ]);\n        } else {\n            return original();\n        }\n    });\n});\n"],"sourceRoot":""}